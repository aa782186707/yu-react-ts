{"version":3,"sources":["webpack:///./src/component/MyOrder/MyOrder.tsx","webpack:///./src/view/order/Order.tsx"],"names":["MyOrder","props","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","React","_this$props","topData","children","console","log","react","className","Option","style","Root","styled","div","_templateObject","Order","inject","store","firstStr","FirstData","changeFirstStr","_this","Order_classCallCheck","Order_getPrototypeOf","_descriptor","Order_assertThisInitialized","state","middleData","bottomData","_this2","mobx_react_module","render","component_MyOrder_MyOrder","color","_ref","colorData","onClick","changeTopData","middleNumberAdd","_ref2","setState","observable","action","computed"],"mappings":"i8BACA,IAMMA,cAEF,SAAAA,EAAYC,GAET,mGAAAC,CAAAC,KAAAH,GAAAI,EAAAD,KAAAE,EAAAL,GAAAM,KAAAH,KACOF,0PALQM,uDAOT,IAAAC,EACyBL,KAAKF,MAA3BQ,EADHD,EACGC,QAASC,EADZF,EACYE,SACjBC,QAAQC,IAAIF,GAIZ,OACIG,EAAA,qBAAKC,UAAU,WACXD,EAAA,cALQ,kBACZA,EAAA,0BAAOJ,IAIH,MACCC,wCAhBXV,EACYe,cAoBlBf,EAAQe,OA3BQ,SAACd,GAA0D,IAC/DS,EAAoBT,EAApBS,SAAUM,EAAUf,EAAVe,MAClB,OAAOH,EAAA,sBAAMC,UAAU,eAAeE,MAAOA,GACxCN,IAyBMV,k3CCtBf,IAAMiB,EAAOC,IAAOC,IAAVC,KASWC,EANpBC,YAAO,SAACC,GACL,MAAO,CACHC,SAAUD,EAAME,UAAUD,SAC1BE,eAAgBH,EAAME,UAAUC,sCAQpC,SAAAL,EAAYpB,GAAY,IAAA0B,cAAA,mGAAAC,CAAAzB,KAAAkB,KACpBlB,KAAAwB,MAAAE,EAAAR,GAAAf,KAAAH,KAAMF,oDADc0B,IAAA,YAAAG,IAAAC,EAAAJ,4JAEpBA,EAAKK,MAAQ,CACTC,WAAY,IACZC,WAAY,UAEhBvB,QAAQC,IAAIe,EAAK1B,MAAMuB,UANHG,wPALOpB,8DAe3BJ,KAAKM,QAAU,WACfE,QAAQC,IAAIT,KAAKM,0CAKZ,IAAA0B,EAAAhC,KAAAK,EAcgCL,KAAKF,MAAlCuB,EAdHhB,EAcGgB,SAAUE,EAdblB,EAcakB,eAClB,OACIb,EAAA,cAACI,EAAD,KACIJ,EAAA,qBAAKC,UAAU,aAAf,aAEID,EAAA,cAACuB,EAAA,EAAD,CAAUC,OAAQ,kBACdxB,EAAA,cAACyB,EAAD,CAAS7B,QAAS0B,EAAK1B,SACnBI,EAAA,cAACyB,EAAQvB,OAAT,CAAgBC,MAAO,CAAEuB,MAAO,QAC5B1B,EAAA,yCAEJA,EAAA,cAACyB,EAAQvB,OAAT,KACIF,EAAA,6CAIZA,EAAA,qBAAKG,MAAO,CAAEuB,MAAO,UAAYpC,KAAKM,SACtCI,EAAA,cA1BM,SAAA2B,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACd5B,EAAA,qBAAKG,MAAO,CAAEuB,MAAOE,GAAaC,QAAS,WAAQP,EAAKQ,kBAAoBR,EAAKH,MAAMC,WAAYE,EAAKS,kBAyBhG,CAAWH,UAAW,UACtB5B,EAAA,cAxBM,SAAAgC,GAAA,IAAGJ,EAAHI,EAAGJ,UAAH,OACd5B,EAAA,mBAAGG,MAAO,CAAEuB,MAAOE,GAAaC,QAAS,WACrCP,EAAKW,SAAS,CACVb,WAAY,QAEhBE,EAAKH,MAAME,aAmBP,CAAWO,UAAW,SACtB5B,EAAA,sBAAM6B,QAAS,WACXhB,EAAe,oBACdF,6CApCjB,OAAOrB,KAAK6B,MAAMC,WAAa,6DAflCc,6EAAqB,wCASrBC,gHAKAC","file":"js/2.3d3625b7.js","sourcesContent":["import * as React from 'react'\r\nconst Options = (props: { children: any, style?: React.CSSProperties }) => {\r\n    const { children, style } = props\r\n    return <span className=\"orderOptions\" style={style}>\r\n        {children}\r\n    </span>\r\n}\r\nclass MyOrder extends React.Component<{ topData: string }, any>{\r\n    public static Option: typeof Options\r\n    constructor(props: {\r\n        topData: string\r\n    }) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        const { topData, children } = this.props\r\n        console.log(children)\r\n        const PropDom = () => (\r\n            <span>{topData}</span>\r\n        )\r\n        return (\r\n            <div className=\"Myorder\">\r\n                <PropDom></PropDom>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nMyOrder.Option = Options\r\nexport default MyOrder","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Observer, inject } from 'mobx-react'\r\nimport { observable, action, computed } from 'mobx'\r\nimport MyOrder from '../../component/MyOrder/MyOrder'\r\nimport './Order.scss'\r\nimport { FirstData } from '../../store/CommonData/firstData'\r\nconst Root = styled.div`\r\n\r\n`\r\n@inject((store: { FirstData: FirstData }) => {\r\n    return {\r\n        firstStr: store.FirstData.firstStr,\r\n        changeFirstStr: store.FirstData.changeFirstStr\r\n    }\r\n})\r\nexport default class Order extends React.Component<{\r\n    firstStr: string,\r\n    changeFirstStr: (str: string) => void\r\n}, any>{\r\n    @observable topData = 'top'\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            middleData: 123,\r\n            bottomData: 'bottom'\r\n        }\r\n        console.log(this.props.firstStr)\r\n    }\r\n    @action\r\n    private changeTopData(): void {\r\n        this.topData = 'tophhaha'\r\n        console.log(this.topData)\r\n    }\r\n    @computed get middleNumberAdd() {\r\n        return this.state.middleData + 1\r\n    }\r\n    render() {\r\n        const TopDom = () => (\r\n            <div style={{ color: 'red' }}>{this.topData}</div>\r\n        )\r\n        const MiddleDom = ({ colorData }: { colorData: string }) => (\r\n            <div style={{ color: colorData }} onClick={() => { this.changeTopData() }}>{this.state.middleData}{this.middleNumberAdd}</div>\r\n        )\r\n        const BottomDom = ({ colorData }: { colorData: string }) => (\r\n            <a style={{ color: colorData }} onClick={() => {\r\n                this.setState({\r\n                    middleData: 500\r\n                })\r\n            }}>{this.state.bottomData}</a>\r\n        )\r\n        const { firstStr, changeFirstStr } = this.props\r\n        return (\r\n            <Root>\r\n                <div className=\"orderName\">\r\n                    这事orider啊啊\r\n                    <Observer render={() => (\r\n                        <MyOrder topData={this.topData}>\r\n                            <MyOrder.Option style={{ color: \"red\" }}>\r\n                                <a>这事第一个children</a>\r\n                            </MyOrder.Option>\r\n                            <MyOrder.Option>\r\n                                <a>这事第二个children</a>\r\n                            </MyOrder.Option>\r\n                        </MyOrder>\r\n                    )} />\r\n                    <div style={{ color: 'black' }}>{this.topData}</div>\r\n                    <MiddleDom colorData={\"green\"} />\r\n                    <BottomDom colorData={\"blue\"} />\r\n                    <span onClick={() => {\r\n                        changeFirstStr('firstStrChange')\r\n                    }} >{firstStr}</span>\r\n                </div>\r\n            </Root>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}